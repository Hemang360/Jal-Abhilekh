
import React from 'react';
import { Filter, Clock, ChevronDown } from 'lucide-react';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';


export default function StatusFilters({ 
  statusFilter, 
  setStatusFilter,
  regionFilter,
  setRegionFilter,
  regions 
}) {
  const statusOptions = [
    { value: 'all', label: 'All', color: 'bg-blue-100 text-blue-700' },
    { value: 'Safe', label: 'Normal', color: 'bg-green-100 text-green-700' },
    { value: 'Caution', label: 'Warning', color: 'bg-yellow-100 text-yellow-700' },
    { value: 'Critical', label: 'Critical', color: 'bg-red-100 text-red-700' }
  ];

  return (
    <div className="bg-white rounded-xl p-6 mb-6 border border-gray-200">
      <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
        <div className="flex flex-wrap items-center gap-3">
          <h3 className="text-lg font-bold text-gray-900">Live Overview</h3>
          {statusOptions.map((option) => (
            <button
              key={option.value}
              onClick={() => setStatusFilter(option.value)}
              className={`px-4 py-2 rounded-full font-medium text-sm transition-all ${
                statusFilter === option.value
                  ? option.color
                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
              }`}
            >
              {option.label}
            </button>
          ))}
        </div>

        <div className="flex flex-wrap items-center gap-3">
          <div className="flex items-center gap-2 px-3 py-1.5 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
            <Filter className="w-4 h-4 text-gray-600" />
            <Select value={regionFilter} onValueChange={setRegionFilter}>
              <SelectTrigger className="border-0 shadow-none focus:ring-0 h-auto p-0 bg-transparent text-sm text-gray-700">
                <SelectValue placeholder="All regions" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">All regions</SelectItem>
                {regions.map(region => (
                  <SelectItem key={region} value={region}>{region}</SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
          
          <button className="flex items-center gap-2 px-4 py-2 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
            <span className="text-sm text-gray-700">Status: Any</span>
            <ChevronDown className="w-4 h-4 text-gray-400" />
          </button>

          <button className="flex items-center gap-2 px-4 py-2 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
            <Clock className="w-4 h-4 text-gray-600" />
            <span className="text-sm text-gray-700">Last 24 hours</span>
            <ChevronDown className="w-4 h-4 text-gray-400" />
          </button>
        </div>
      </div>

      <div className="flex gap-2 mt-4">
        <span className="inline-flex items-center gap-2 px-4 py-2 bg-green-500 text-white rounded-lg font-medium text-sm">
          <span className="w-2 h-2 bg-white rounded-full animate-pulse"></span>
          Live
        </span>
        <span className="inline-flex items-center gap-2 px-4 py-2 bg-emerald-500 text-white rounded-lg font-medium text-sm">
          Rising
        </span>
      </div>
    </div>
  );
}
